/* Owen Louden, Intro Media Apps, Final Project, 4/20/22 */


*{
    /* normal starting to a styling of webpage */
   margin: 0;
   padding: 0;
   box-sizing: border-box;
 }
 
 /* change look of overall page */
 body{
    /* these help space the content appropriately, especially the icons next to each other */
   display: flex;
   align-items: center;
   justify-content: center;
  /* need background color to differentiate the page vs game board */
   background: #D3D3;
 
   /* i don't want the game board to be right at the top of the page, give some room below */
   min-height: 100vh;/* vh is special and changes the height of the start of wrapper based on width from top of screen */
 }
 
 /* basically the gameboard */
 .wrapper{
   padding: 25px; /* little bit of a boarder to the game */
   border-radius: 10px;
  /* shows actual size of cards */
   background: #F8F8F8;
 
 }
 
 /* multiple classes at once to help solidify similarities */
 .cards, .card, .view{
   display: flex;
   align-items: center;
   justify-content: center;
 }
 
 /* specifically set sizes and flexing for all cards */
 .cards{
   height: 500px;
   width: 500px;
   flex-wrap: wrap; /* allows the icons to wrap around each other */
   justify-content: space-between;
 }
 
 
 /* change specifics for just the card itself */
 .cards .card{
   cursor: pointer; /* display cursor as if you're clicking on a link or something similar */
   list-style: none; /* gets rid of bullet points */
   user-select: none; /* prevents from allowing user to highlight item */ 
   position: relative;  /* allows poisitioning to be adjusted */
 
 
   height: calc(100% / 4 - 15px); /* calculations used to allow all wrapped cards and icons to appear all at once */ 
   width: calc(100% / 4 - 15px); /* - 15px allows for each square to be shown individually*/
 }
 
 
 
 
 
 /* want to change the view of the cards themselves */ 
 .card .view{
   width: 100%;
   height: 100%;
   position: absolute;
  
   background: #fff;
   pointer-events: none;
   backface-visibility: hidden; /* chooses which side to view, want to view pokeball*/
 
   transition: transform .2s ease; /* make the flip itself look fancy */
 }
 
 /* sizing of the cards images */
 .card .viewFront img{
   width: 50px;
 }
 .card .viewBack img{
   max-width: 50px;
 }
 
 /* for rotating, we want to show when our cards rotate certain Y axis', and when they're flipped show each side */
 .card .viewBack{
   transform: rotateY(-180deg);
 }
  /* when it's being flipped, rotate it around the y to 0 then */
 .card.flip .viewBack{
   transform: rotateY(0);
 }
  /* back to other side completely */ 
 .card.flip .viewFront{
   transform: rotateY(180deg);
 }
 